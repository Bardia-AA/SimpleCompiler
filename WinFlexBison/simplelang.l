%{
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "parser.tab.h" // Include the header file generated by Bison, which contains the tokens.

#ifdef _WIN32
#define strdup _strdup // Map strdup to _strdup on Windows for compatibility.
#define YY_NO_UNISTD_H // Prevent Flex from including <unistd.h> which is not available on Windows.
#pragma warning(disable: 4996) // Disable specific warnings about deprecated functions.
#endif

void yyerror(const char *s) {
    fprintf(stderr, "Error: %s\n", s);
}
%}

%option noyywrap

%%

[ \t]+                    { /* Skip whitespace */ }
\n                        { /* You can handle newlines if needed or just skip them */ }
[0-9]+                    { yylval.ival = atoi(yytext); return NUMBER; }
"print"                   { return PRINT; }
"let"                     { return LET; }
[a-zA-Z_][a-zA-Z0-9_]*    { 
                            yylval.sval = strdup(yytext);
                            return IDENTIFIER;
                          }
"+"                       { return PLUS; }
"-"                       { return MINUS; }
"*"                       { return MULTIPLY; }
"/"                       { return DIVIDE; }
"="                       { return ASSIGN; }
";"                       { return SEMICOLON; }
.                         { /* Catch all other characters */ }

%%